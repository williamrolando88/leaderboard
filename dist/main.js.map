{"version":3,"file":"main.js","mappings":"mBAIA,MAAMA,EAAa,ICJJ,MACbC,cACEC,KAAKC,MAAQ,GAGfC,IAAIC,EAAMC,GACR,MAAMC,EAAU,CACdC,KAAMH,EACNC,MAAOA,GAETJ,KAAKC,MAAMM,KAAKF,GAChBG,QAAQC,IAAIT,KAAKC,OAGnBS,QACEV,KAAKC,MAAMU,OAAO,KCXtBC,SAASC,cAAc,QAAQC,iBAAiB,UFEjC,SAAmBC,GAChCA,EAAEC,iBACF,MAAMb,EAAOS,SAASC,cAAc,SAC9BT,EAAQQ,SAASC,cAAc,UACrCf,EAAWI,IAAIC,EAAKc,MAAOb,EAAMa,OGVpBC,eAA0BZ,EAAMF,GAC7C,MAAMe,EAAW,CAAEb,KAAMA,EAAMF,MAAOA,SAChCgB,MACJ,oGACA,CACEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,KHIzBO,CAAWvB,EAAKc,MAAOb,EAAMa,OAC7Bd,EAAKc,MAAQ,GACbb,EAAMa,MAAQ,GACdd,EAAKwB,WERPf,SAASC,cAAc,YAAYC,iBAAiB,SEJrCI,eAAuBH,GACpCA,EAAEC,iBACF,IAAIY,QAAiBR,MACnB,oGACA,CACEC,OAAQ,MACRC,QAAS,CAAE,eAAgB,sBAG3BO,QAAeD,EAASE,OAC5BtB,QAAQC,IAAIoB,EAAOE,QCDN,SAAwB9B,GACrC,MAAM+B,EAAepB,SAASC,cAAc,kBAC5C,KAAOmB,EAAaC,YAClBD,EAAaE,YAAYF,EAAaC,YAExChC,EAAMkC,SAAQ,CAAC9B,EAAS+B,KACtB,MAAMC,EAjBMhC,CAAAA,IACd,MAAMgC,EAAazB,SAAS0B,cAAc,MACpCC,EAAS3B,SAAS0B,cAAc,MACtCC,EAAOC,YAAcnC,EAAQC,KAC7B+B,EAAWI,YAAYF,GACvB,MAAMG,EAAU9B,SAAS0B,cAAc,MAGvC,OAFAI,EAAQF,YAAcnC,EAAQD,MAC9BiC,EAAWI,YAAYC,GAChBL,GAScM,CAAOtC,GACtB+B,EAAI,GAAM,GACZC,EAAWO,UAAU1C,IAAI,gBAE3B8B,EAAaS,YAAYJ,MDR3BQ,CAAehB,EAAOE,Y","sources":["webpack://leaderboard/./src/modules/addScores.js","webpack://leaderboard/./src/modules/Scores.js","webpack://leaderboard/./src/index.js","webpack://leaderboard/./src/modules/postScores.js","webpack://leaderboard/./src/modules/refreshScores.js","webpack://leaderboard/./src/modules/appendElements.js"],"sourcesContent":["import appendElements from './appendElements.js';\r\nimport postScores from './postScores.js';\r\nimport Scores from './Scores.js';\r\n\r\nconst scoreTable = new Scores();\r\n\r\nexport default function addScores(e) {\r\n  e.preventDefault();\r\n  const name = document.querySelector('#name');\r\n  const score = document.querySelector('#score');\r\n  scoreTable.add(name.value, score.value);\r\n  postScores(name.value, score.value);\r\n  name.value = '';\r\n  score.value = '';\r\n  name.focus();\r\n}\r\n","export default class Scores {\r\n  constructor() {\r\n    this.array = [];\r\n  }\r\n\r\n  add(name, score) {\r\n    const element = {\r\n      user: name,\r\n      score: score,\r\n    };\r\n    this.array.push(element);\r\n    console.log(this.array);\r\n  }\r\n\r\n  clear() {\r\n    this.array.splice(0);\r\n  }\r\n}\r\n","import addScores from './modules/addScores.js';\r\nimport refresh from './modules/refreshScores.js';\r\nimport './styles.css';\r\n\r\ndocument.querySelector('form').addEventListener('submit', addScores);\r\n\r\ndocument.querySelector('#refresh').addEventListener('click', refresh);\r\n\r\n// kOkmDn5UlSKIBKnC0NtR/scores/\r\n","export default async function postScores(user, score) {\r\n  const postData = { user: user, score: score };\r\n  await fetch(\r\n    'https://us-central1-js-capstone-backend.cloudfunctions.net/api/games/DOVVH12mgm37io5xT1rR/scores/',\r\n    {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(postData),\r\n    },\r\n  );\r\n}\r\n","import appendElements from './appendElements';\r\n\r\nexport default async function refresh(e) {\r\n  e.preventDefault();\r\n  let response = await fetch(\r\n    'https://us-central1-js-capstone-backend.cloudfunctions.net/api/games/DOVVH12mgm37io5xT1rR/scores/',\r\n    {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' },\r\n    },\r\n  );\r\n  let scores = await response.json();\r\n  console.log(scores.result);\r\n  appendElements(scores.result);\r\n}\r\n","const render = (element) => {\r\n  const scoreEntry = document.createElement('tr');\r\n  const nameTd = document.createElement('td');\r\n  nameTd.textContent = element.user;\r\n  scoreEntry.appendChild(nameTd);\r\n  const scoreTd = document.createElement('td');\r\n  scoreTd.textContent = element.score;\r\n  scoreEntry.appendChild(scoreTd);\r\n  return scoreEntry;\r\n};\r\n\r\nexport default function appendElements(array) {\r\n  const tableContent = document.querySelector('#table-content');\r\n  while (tableContent.firstChild) {\r\n    tableContent.removeChild(tableContent.firstChild);\r\n  }\r\n  array.forEach((element, i) => {\r\n    const scoreEntry = render(element);\r\n    if (i % 2 !== 0) {\r\n      scoreEntry.classList.add('bg-stone-200');\r\n    }\r\n    tableContent.appendChild(scoreEntry);\r\n  });\r\n  return tableContent;\r\n}\r\n"],"names":["scoreTable","constructor","this","array","add","name","score","element","user","push","console","log","clear","splice","document","querySelector","addEventListener","e","preventDefault","value","async","postData","fetch","method","headers","body","JSON","stringify","postScores","focus","response","scores","json","result","tableContent","firstChild","removeChild","forEach","i","scoreEntry","createElement","nameTd","textContent","appendChild","scoreTd","render","classList","appendElements"],"sourceRoot":""}